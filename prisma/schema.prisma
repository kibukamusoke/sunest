// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-arm64-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String    @id @default(uuid())
  email           String    @unique
  password        String?
  displayName     String?
  avatar          String?   // URL to avatar image
  isActive        Boolean   @default(true)
  emailVerified   Boolean   @default(false)
  verifyToken     String?   // For email verification
  resetToken      String?   // For password reset
  resetTokenExpiry DateTime?
  provider        String?   // "local", "google", "github"
  providerId      String?
  refreshToken    String?
  roles           Role[]
  files           File[]
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
}

model Role {
  id          String    @id @default(uuid())
  name        String    @unique
  description String?
  users       User[]
  permissions Permission[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Permission {
  id          String    @id @default(uuid())
  name        String    @unique
  description String?
  roles       Role[]
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model File {
  id          String    @id @default(uuid())
  key         String    @unique
  filename    String
  mimetype    String
  size        Int?
  bucket      String
  uploadedBy  String?
  owner       User?     @relation(fields: [userId], references: [id])
  userId      String?
  status      FileStatus @default(PENDING)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

enum FileStatus {
  PENDING
  UPLOADED
  FAILED
}
